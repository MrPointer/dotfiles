export PATH=$HOME/.local/bin:$HOME/bin:/usr/local/bin:$PATH

# Ensure gpg can prompt input from an available tty
export GPG_TTY=$(tty)

function load_brew_env() {
    # Load (home)brew
    eval "$("$BREW_BINARY" shellenv)"
}

if [[ ! -v BREW_LOADED || "$BREW_LOADED" == "false" ]]; then
    DEFER_BREW_LOAD=false

    {{ if (eq .chezmoi.os "linux") -}}
    BREW_HOME="/home/linuxbrew/.linuxbrew"
    {{- else if (eq .chezmoi.os "darwin") -}}
    {{ if (eq .chezmoi.arch "arm64") -}}
    BREW_HOME="/opt/homebrew"
    {{- else }}
    BREW_HOME="/usr/local"
    {{- end}}
    {{- end}}
    BREW_BINARY="$BREW_HOME"/bin/brew

    if [[ -f "$BREW_BINARY" ]]; then
        {{- if (eq .chezmoi.group "devbox") }}
        export PATH="$PATH:$BREW_HOME/bin:$BREW_HOME/sbin"
        {{- else }}
        {{- if (eq .chezmoi.os "darwin") }}
        DEFER_BREW_LOAD=true
        {{- else }}
        load_brew_env
        {{- end -}}
        {{- end -}}
        {{- if .system.multi_user_system }}
        # Impersonate brew management user
        alias brew="sudo -Hu {{ .system.brew_multi_user }} $BREW_BINARY"
        {{- end }}
    fi

    BREW_LOADED=true
fi

{{ if (eq .chezmoi.os "linux") -}}
if command -v cargo &>/dev/null; then
    if command -v mold &>/dev/null; then
        # Always prefer to use mold as the linker on Linux
        export RUSTFLAGS="-C linker=clang -C link-arg=-fuse-ld=mold"
    fi
fi
{{- end }}

if command -v bun &>/dev/null; then
    # Ensure bun is in the PATH
    export PATH="$HOME/.bun/bin:$PATH"
fi

{{ if (eq .chezmoi.os "linux") -}}
{{- if (.chezmoi.kernel.osrelease | lower | contains "microsoft") -}}
# WSL-specific code
if [[ -d "/mnt/c/Users/timor.g/AppData/Local/Programs/Microsoft VS Code/bin/" ]]; then
    export PATH="$PATH:/mnt/c/Users/timor.g/AppData/Local/Programs/Microsoft VS Code/bin/"
fi
{{- end }}
{{- end -}}

{{ if .personal.work_env -}}
# Load work-generic profile
source {{ .system.work_generic_dotfiles_profile }}

# Load work-generic env file if exists
if [[ -v "WORK_ZSH_ENV_EXTENSION" && -f "$WORK_ZSH_ENV_EXTENSION" ]]; then
  source "$WORK_ZSH_ENV_EXTENSION"
fi
{{- end }}
