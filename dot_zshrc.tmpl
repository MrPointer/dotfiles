# Use VIM as default editor
export VISUAL=vim
export EDITOR="$VISUAL"

# You may need to manually set your language environment
export LANG="en_US.UTF-8"
export LC_ALL="en_US.UTF-8"

{{ if (eq .chezmoi.os "darwin" ) -}}
# Manually map home and end keys - macOS terminal compatibility
# Different terminals send different escape sequences
bindkey "^[[H" beginning-of-line      # Home key (standard)
bindkey "^[OH" beginning-of-line      # Home key (alternate)
bindkey "^[[1~" beginning-of-line     # Home key (another variant)

bindkey "^[[F" end-of-line            # End key (standard)
bindkey "^[OF" end-of-line            # End key (alternate)
bindkey "^[[4~" end-of-line           # End key (another variant)
{{- end }}

# Enable homebrew completions
if command -v brew &>/dev/null; then
  FPATH=$(brew --prefix)/share/zsh/site-functions:$FPATH
fi

# Custom git aliases
alias gmv="git mv"

if command -v nvim &>/dev/null; then
  alias vi="nvim"
  alias vim="nvim"
fi

if command -v fzf &>/dev/null; then
  if [[ ! -f ~/.fzf.zsh ]]; then
    # fzf completions are missing, generate them
    if which fzf | grep -q "brew"; then
      # fzf is installed with brew
      "$(brew --prefix fzf)/install"
    fi
  fi

  if command -v fd &>/dev/null; then
    export FZF_DEFAULT_COMMAND="fd --type f --color=never"
  fi
  
  export FZF_CTRL_T_COMMAND="$FZF_DEFAULT_COMMAND"
  source <(fzf --zsh)
fi

zstyle ':completion:*' menu select
mkdir -p ~/.zfunc &>/dev/null
fpath+=~/.zfunc

{{ if .system.multi_user_system -}}
autoload -U +X compinit && compinit -u
{{- else -}}
autoload -U +X compinit && compinit
{{- end }}
autoload -U +X bashcompinit && bashcompinit

if command -v pipx &>/dev/null; then
  # Register pipx completions
  eval "$(register-python-argcomplete pipx)"
fi

if command -v poetry &>/dev/null; then
  # Register poetry completions
  poetry completions zsh > ~/.zfunc/_poetry
fi

if command -v chezmoi &>/dev/null; then
  # Register chezmoi completions
  chezmoi completion zsh --output ~/.zfunc/_chezmoi
fi

if command -v npm &>/dev/null; then
  # Register npm completions
  npm completion > ~/.zfunc/_npm
fi

if command -v task &>/dev/null; then
  # Register go-task completions
  eval "$(task --completion zsh)"
fi

if command -v jfrog &>/dev/null; then
  # Register jfrog-cli completions
  local jfrog_completions="~/.jfrog/jfrog_zsh_completions"
  if [[ ! -f "${jfrog_completions}" ]]; then
    jfrog completion zsh --install >/dev/null
  fi
  source ~/.jfrog/jfrog_zsh_completion
fi

if command -v az &>/dev/null; then
  # Register Azure-DevOps completions
  source $(brew --prefix)/etc/bash_completion.d/az
fi

{{ if .personal.work_env -}}
source "$WORK_ZSH_RC_EXTENSION"
{{- end }}
