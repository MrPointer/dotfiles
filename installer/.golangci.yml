version: "2"

formatters:
  enable:
    - gofumpt
    - goimports
    - golines

  settings:
    gofumpt:
      extra-rules: true

    golines:
      max-len: 120

linters:
  default: all
  disable:
    - decorder # Don't care about this
    - dupl # Basically every table driven test ever triggers this
    - dupword # Messes with test cases more often than not
    - err113 # Out of date
    - exhaustruct # No
    - forbidigo # Nothing to forbid
    - funlen # Bad metric for complexity
    - ginkgolinter # I don't use whatever this is
    - gochecknoglobals # Globals are fine sometimes, use common sense
    - gocyclo # cyclop does this instead
    - godox # "todo" and "fixme" comments are allowed
    - goheader # No need
    - gosmopolitan # No need
    - grouper # Imports take care of themselves, rest is common sense
    - ireturn # This is just not necessary or practical in a real codebase
    - lll # Auto formatters do this and what they can't do I don't care about
    - maintidx # This is just the inverse of complexity... which is cyclop
    - nestif # cyclop does this
    - nlreturn # Similar to wsl, I think best left to judgement
    - nonamedreturns # Named returns are often helpful, it's naked returns that are the issue
    - paralleltest # I've never had Go tests take longer than a few seconds, it's fine
    - unparam # gopls is better and more subtle
    - varnamelen # Lots of false positives of things that are fine
    - wrapcheck # Not every error must be wrapped
    - wsl # Very aggressive, some of this I like but tend to do anyway

  exclusions:
    presets:
      # See https://golangci-lint.run/usage/false-positives/#exclusion-presets
      - comments # Revive in particular has lots of false positives
      - std-error-handling
      - common-false-positives
    rules:
      - path: _test\.go
        linters:
          - prealloc # These kinds of optimisations will make no difference to test code
          - gosec # Tests don't need security stuff

  settings:
    cyclop:
      max-complexity: 20

    depguard:
      rules:
        main:
          deny:
            - pkg: io/ioutil
              desc: io/ioutil is deprecated, use io instead

            - pkg: "math/rand$"
              desc: use math/rand/v2 instead

    errcheck:
      check-type-assertions: true
      check-blank: true

    exhaustive:
      check:
        - switch
        - map
      default-signifies-exhaustive: true

    staticcheck:
      checks:
        - all

    gosec:
      excludes:
        - G104 # Errors not checked, handled by errcheck

    govet:
      enable-all: true

    nakedret:
      max-func-lines: 0 # Disallow any naked returns

    nolintlint:
      allow-unused: false
      require-explanation: true
      require-specific: true

    usetesting:
      context-background: true
      context-todo: true
      os-chdir: true
      os-mkdir-temp: true
      os-setenv: true
      os-create-temp: true
      os-temp-dir: true

    revive:
      max-open-files: 256
      enable-all-rules: true
      rules:
        - name: add-constant
          disabled: true # goconst does this

        - name: argument-limit
          arguments:
            - 5

        - name: cognitive-complexity
          disabled: true # gocognit does this

        - name: comment-spacings
          arguments:
            - "nolint:"

        - name: cyclomatic
          disabled: true # cyclop does this

        - name: exported
          arguments:
            - checkPrivateReceivers
            - checkPublicInterface

        - name: function-length
          disabled: true # Bad proxy for complexity

        - name: function-result-limit
          arguments:
            - 3

        - name: import-shadowing
          disabled: true # predeclared does this

        - name: line-length-limit
          disabled: true # gofmt/golines handles this well enough

        - name: max-public-structs
          disabled: true # This is a dumb rule

        - name: redefines-builtin-id
          disabled: true # predeclared does this

        - name: unhandled-error
          arguments:
            - fmt\.(Fp|P)rint(ln|f)?
            - strings.Builder.Write(String|Byte)?
            - bytes.Buffer.Write(String|Byte)?

        - name: flag-parameter
          disabled: true # As far as I can work out this just doesn't like bools

        - name: unused-parameter
          disabled: true # The gopls unused analyzer covers this better

        - name: unused-receiver
          disabled: true # As above
