// Code generated by mockery; DO NOT EDIT.
// github.com/vektra/mockery
// template: matryer

package compatibility

import (
	"sync"
)

// Ensure that MoqPrerequisiteChecker does implement PrerequisiteChecker.
// If this is not the case, regenerate this file with mockery.
var _ PrerequisiteChecker = &MoqPrerequisiteChecker{}

// MoqPrerequisiteChecker is a mock implementation of PrerequisiteChecker.
//
//	func TestSomethingThatUsesPrerequisiteChecker(t *testing.T) {
//
//		// make and configure a mocked PrerequisiteChecker
//		mockedPrerequisiteChecker := &MoqPrerequisiteChecker{
//			CheckPrerequisitesFunc: func(config map[string]PrerequisiteConfig) (PrerequisiteStatus, error) {
//				panic("mock out the CheckPrerequisites method")
//			},
//		}
//
//		// use mockedPrerequisiteChecker in code that requires PrerequisiteChecker
//		// and then make assertions.
//
//	}
type MoqPrerequisiteChecker struct {
	// CheckPrerequisitesFunc mocks the CheckPrerequisites method.
	CheckPrerequisitesFunc func(config map[string]PrerequisiteConfig) (PrerequisiteStatus, error)

	// calls tracks calls to the methods.
	calls struct {
		// CheckPrerequisites holds details about calls to the CheckPrerequisites method.
		CheckPrerequisites []struct {
			// Config is the config argument value.
			Config map[string]PrerequisiteConfig
		}
	}
	lockCheckPrerequisites sync.RWMutex
}

// CheckPrerequisites calls CheckPrerequisitesFunc.
func (mock *MoqPrerequisiteChecker) CheckPrerequisites(config map[string]PrerequisiteConfig) (PrerequisiteStatus, error) {
	if mock.CheckPrerequisitesFunc == nil {
		panic("MoqPrerequisiteChecker.CheckPrerequisitesFunc: method is nil but PrerequisiteChecker.CheckPrerequisites was just called")
	}
	callInfo := struct {
		Config map[string]PrerequisiteConfig
	}{
		Config: config,
	}
	mock.lockCheckPrerequisites.Lock()
	mock.calls.CheckPrerequisites = append(mock.calls.CheckPrerequisites, callInfo)
	mock.lockCheckPrerequisites.Unlock()
	return mock.CheckPrerequisitesFunc(config)
}

// CheckPrerequisitesCalls gets all the calls that were made to CheckPrerequisites.
// Check the length with:
//
//	len(mockedPrerequisiteChecker.CheckPrerequisitesCalls())
func (mock *MoqPrerequisiteChecker) CheckPrerequisitesCalls() []struct {
	Config map[string]PrerequisiteConfig
} {
	var calls []struct {
		Config map[string]PrerequisiteConfig
	}
	mock.lockCheckPrerequisites.RLock()
	calls = mock.calls.CheckPrerequisites
	mock.lockCheckPrerequisites.RUnlock()
	return calls
}
